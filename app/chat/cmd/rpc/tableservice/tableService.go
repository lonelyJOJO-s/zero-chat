// Code generated by goctl. DO NOT EDIT.
// Source: chat.proto

package tableservice

import (
	"context"

	"zero-chat/app/chat/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetStoreItemsBySliceReq  = pb.GetStoreItemsBySliceReq
	GetStoreItemsBySliceResp = pb.GetStoreItemsBySliceResp
	Message                  = pb.Message
	Null                     = pb.Null
	SendReq                  = pb.SendReq
	StoreAddItemReq          = pb.StoreAddItemReq
	StoreAddItemResp         = pb.StoreAddItemResp
	StoreTableItem           = pb.StoreTableItem
	SyncAddItemReq           = pb.SyncAddItemReq
	SyncAddItemResp          = pb.SyncAddItemResp
	SyncGetUnreadItemsReq    = pb.SyncGetUnreadItemsReq
	SyncGetUnreadItemsResp   = pb.SyncGetUnreadItemsResp
	SyncReturnItem           = pb.SyncReturnItem
	SyncTableItem            = pb.SyncTableItem

	TableService interface {
		// store table
		StoreAddItem(ctx context.Context, in *StoreAddItemReq, opts ...grpc.CallOption) (*StoreAddItemResp, error)
		GetStoreItemsBySlice(ctx context.Context, in *GetStoreItemsBySliceReq, opts ...grpc.CallOption) (*GetStoreItemsBySliceResp, error)
		// sync table
		SyncAddItem(ctx context.Context, in *SyncAddItemReq, opts ...grpc.CallOption) (*SyncAddItemResp, error)
		SyncGetUnreadItems(ctx context.Context, in *SyncGetUnreadItemsReq, opts ...grpc.CallOption) (*SyncGetUnreadItemsResp, error)
	}

	defaultTableService struct {
		cli zrpc.Client
	}
)

func NewTableService(cli zrpc.Client) TableService {
	return &defaultTableService{
		cli: cli,
	}
}

// store table
func (m *defaultTableService) StoreAddItem(ctx context.Context, in *StoreAddItemReq, opts ...grpc.CallOption) (*StoreAddItemResp, error) {
	client := pb.NewTableServiceClient(m.cli.Conn())
	return client.StoreAddItem(ctx, in, opts...)
}

func (m *defaultTableService) GetStoreItemsBySlice(ctx context.Context, in *GetStoreItemsBySliceReq, opts ...grpc.CallOption) (*GetStoreItemsBySliceResp, error) {
	client := pb.NewTableServiceClient(m.cli.Conn())
	return client.GetStoreItemsBySlice(ctx, in, opts...)
}

// sync table
func (m *defaultTableService) SyncAddItem(ctx context.Context, in *SyncAddItemReq, opts ...grpc.CallOption) (*SyncAddItemResp, error) {
	client := pb.NewTableServiceClient(m.cli.Conn())
	return client.SyncAddItem(ctx, in, opts...)
}

func (m *defaultTableService) SyncGetUnreadItems(ctx context.Context, in *SyncGetUnreadItemsReq, opts ...grpc.CallOption) (*SyncGetUnreadItemsResp, error) {
	client := pb.NewTableServiceClient(m.cli.Conn())
	return client.SyncGetUnreadItems(ctx, in, opts...)
}
