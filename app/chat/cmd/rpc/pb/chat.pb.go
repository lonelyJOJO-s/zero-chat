// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.20.3
// source: chat.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From        int64  `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	Content     string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	SendTime    int64  `protobuf:"varint,3,opt,name=sendTime,proto3" json:"sendTime,omitempty"`
	ContentType int32  `protobuf:"varint,4,opt,name=contentType,proto3" json:"contentType,omitempty"` // text or audio or video
	To          int64  `protobuf:"varint,5,opt,name=to,proto3" json:"to,omitempty"`
	File        string `protobuf:"bytes,6,opt,name=file,proto3" json:"file,omitempty"`
	ChatType    int32  `protobuf:"varint,7,opt,name=chatType,proto3" json:"chatType,omitempty"` // group or single
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_chat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Message) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *Message) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *Message) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *Message) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *Message) GetChatType() int32 {
	if x != nil {
		return x.ChatType
	}
	return 0
}

type MessageWithSeq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From        int64  `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	Content     string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	SendTime    int64  `protobuf:"varint,3,opt,name=sendTime,proto3" json:"sendTime,omitempty"`
	ContentType int32  `protobuf:"varint,4,opt,name=contentType,proto3" json:"contentType,omitempty"` // text or audio or video
	To          int64  `protobuf:"varint,5,opt,name=to,proto3" json:"to,omitempty"`
	File        string `protobuf:"bytes,6,opt,name=file,proto3" json:"file,omitempty"`
	ChatType    int32  `protobuf:"varint,7,opt,name=chatType,proto3" json:"chatType,omitempty"` // group or single
	Sequence    int64  `protobuf:"varint,8,opt,name=sequence,proto3" json:"sequence,omitempty"`
}

func (x *MessageWithSeq) Reset() {
	*x = MessageWithSeq{}
	mi := &file_chat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageWithSeq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageWithSeq) ProtoMessage() {}

func (x *MessageWithSeq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageWithSeq.ProtoReflect.Descriptor instead.
func (*MessageWithSeq) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{1}
}

func (x *MessageWithSeq) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *MessageWithSeq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MessageWithSeq) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *MessageWithSeq) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *MessageWithSeq) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *MessageWithSeq) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *MessageWithSeq) GetChatType() int32 {
	if x != nil {
		return x.ChatType
	}
	return 0
}

func (x *MessageWithSeq) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

type StoreTableItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeLineId   string `protobuf:"bytes,1,opt,name=timeLineId,proto3" json:"timeLineId,omitempty"`
	Conversation string `protobuf:"bytes,2,opt,name=conversation,proto3" json:"conversation,omitempty"`
	MsgType      int32  `protobuf:"varint,3,opt,name=msgType,proto3" json:"msgType,omitempty"`         // group or signle
	ContentType  int32  `protobuf:"varint,4,opt,name=contentType,proto3" json:"contentType,omitempty"` // text, pic or others
	SendTime     int64  `protobuf:"varint,5,opt,name=sendTime,proto3" json:"sendTime,omitempty"`
	Sender       int64  `protobuf:"varint,6,opt,name=sender,proto3" json:"sender,omitempty"`
	Content      string `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	File         string `protobuf:"bytes,8,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *StoreTableItem) Reset() {
	*x = StoreTableItem{}
	mi := &file_chat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreTableItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreTableItem) ProtoMessage() {}

func (x *StoreTableItem) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreTableItem.ProtoReflect.Descriptor instead.
func (*StoreTableItem) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{2}
}

func (x *StoreTableItem) GetTimeLineId() string {
	if x != nil {
		return x.TimeLineId
	}
	return ""
}

func (x *StoreTableItem) GetConversation() string {
	if x != nil {
		return x.Conversation
	}
	return ""
}

func (x *StoreTableItem) GetMsgType() int32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *StoreTableItem) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *StoreTableItem) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *StoreTableItem) GetSender() int64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *StoreTableItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *StoreTableItem) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

type SyncTableItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeLineId  string `protobuf:"bytes,1,opt,name=timeLineId,proto3" json:"timeLineId,omitempty"`
	UserId      int64  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	MsgType     int32  `protobuf:"varint,3,opt,name=msgType,proto3" json:"msgType,omitempty"`         // group or signle
	ContentType int32  `protobuf:"varint,4,opt,name=contentType,proto3" json:"contentType,omitempty"` // text, pic or others
	SendTime    int64  `protobuf:"varint,5,opt,name=sendTime,proto3" json:"sendTime,omitempty"`
	Sender      int64  `protobuf:"varint,6,opt,name=sender,proto3" json:"sender,omitempty"`
	Content     string `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	File        string `protobuf:"bytes,8,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *SyncTableItem) Reset() {
	*x = SyncTableItem{}
	mi := &file_chat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncTableItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncTableItem) ProtoMessage() {}

func (x *SyncTableItem) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncTableItem.ProtoReflect.Descriptor instead.
func (*SyncTableItem) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{3}
}

func (x *SyncTableItem) GetTimeLineId() string {
	if x != nil {
		return x.TimeLineId
	}
	return ""
}

func (x *SyncTableItem) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SyncTableItem) GetMsgType() int32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *SyncTableItem) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *SyncTableItem) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *SyncTableItem) GetSender() int64 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *SyncTableItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SyncTableItem) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

type Null struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Null) Reset() {
	*x = Null{}
	mi := &file_chat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Null) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Null) ProtoMessage() {}

func (x *Null) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Null.ProtoReflect.Descriptor instead.
func (*Null) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{4}
}

type StoreAddItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg *StoreTableItem `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *StoreAddItemReq) Reset() {
	*x = StoreAddItemReq{}
	mi := &file_chat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreAddItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreAddItemReq) ProtoMessage() {}

func (x *StoreAddItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreAddItemReq.ProtoReflect.Descriptor instead.
func (*StoreAddItemReq) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{5}
}

func (x *StoreAddItemReq) GetMsg() *StoreTableItem {
	if x != nil {
		return x.Msg
	}
	return nil
}

type StoreAddItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeLineId string `protobuf:"bytes,1,opt,name=timeLineId,proto3" json:"timeLineId,omitempty"`
	SequenceId int64  `protobuf:"varint,2,opt,name=SequenceId,proto3" json:"SequenceId,omitempty"`
}

func (x *StoreAddItemResp) Reset() {
	*x = StoreAddItemResp{}
	mi := &file_chat_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreAddItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreAddItemResp) ProtoMessage() {}

func (x *StoreAddItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreAddItemResp.ProtoReflect.Descriptor instead.
func (*StoreAddItemResp) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{6}
}

func (x *StoreAddItemResp) GetTimeLineId() string {
	if x != nil {
		return x.TimeLineId
	}
	return ""
}

func (x *StoreAddItemResp) GetSequenceId() int64 {
	if x != nil {
		return x.SequenceId
	}
	return 0
}

type SyncAddItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg *SyncTableItem `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SyncAddItemReq) Reset() {
	*x = SyncAddItemReq{}
	mi := &file_chat_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncAddItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAddItemReq) ProtoMessage() {}

func (x *SyncAddItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAddItemReq.ProtoReflect.Descriptor instead.
func (*SyncAddItemReq) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{7}
}

func (x *SyncAddItemReq) GetMsg() *SyncTableItem {
	if x != nil {
		return x.Msg
	}
	return nil
}

type SyncAddItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeLineId string `protobuf:"bytes,1,opt,name=timeLineId,proto3" json:"timeLineId,omitempty"`
	SequenceId int64  `protobuf:"varint,2,opt,name=SequenceId,proto3" json:"SequenceId,omitempty"`
}

func (x *SyncAddItemResp) Reset() {
	*x = SyncAddItemResp{}
	mi := &file_chat_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncAddItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAddItemResp) ProtoMessage() {}

func (x *SyncAddItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAddItemResp.ProtoReflect.Descriptor instead.
func (*SyncAddItemResp) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{8}
}

func (x *SyncAddItemResp) GetTimeLineId() string {
	if x != nil {
		return x.TimeLineId
	}
	return ""
}

func (x *SyncAddItemResp) GetSequenceId() int64 {
	if x != nil {
		return x.SequenceId
	}
	return 0
}

type SendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg *Message `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SendReq) Reset() {
	*x = SendReq{}
	mi := &file_chat_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendReq) ProtoMessage() {}

func (x *SendReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendReq.ProtoReflect.Descriptor instead.
func (*SendReq) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{9}
}

func (x *SendReq) GetMsg() *Message {
	if x != nil {
		return x.Msg
	}
	return nil
}

type SendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreSequence int64 `protobuf:"varint,1,opt,name=storeSequence,proto3" json:"storeSequence,omitempty"`
	SyncSequence  int64 `protobuf:"varint,2,opt,name=syncSequence,proto3" json:"syncSequence,omitempty"`
}

func (x *SendResp) Reset() {
	*x = SendResp{}
	mi := &file_chat_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendResp) ProtoMessage() {}

func (x *SendResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendResp.ProtoReflect.Descriptor instead.
func (*SendResp) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{10}
}

func (x *SendResp) GetStoreSequence() int64 {
	if x != nil {
		return x.StoreSequence
	}
	return 0
}

func (x *SendResp) GetSyncSequence() int64 {
	if x != nil {
		return x.SyncSequence
	}
	return 0
}

type GetSyncMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastRead int64 `protobuf:"varint,1,opt,name=lastRead,proto3" json:"lastRead,omitempty"`
	UserId   int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetSyncMessageReq) Reset() {
	*x = GetSyncMessageReq{}
	mi := &file_chat_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSyncMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncMessageReq) ProtoMessage() {}

func (x *GetSyncMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncMessageReq.ProtoReflect.Descriptor instead.
func (*GetSyncMessageReq) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{11}
}

func (x *GetSyncMessageReq) GetLastRead() int64 {
	if x != nil {
		return x.LastRead
	}
	return 0
}

func (x *GetSyncMessageReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetSyncMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg []*MessageWithSeq `protobuf:"bytes,1,rep,name=msg,proto3" json:"msg,omitempty"`
}

func (x *GetSyncMessageResp) Reset() {
	*x = GetSyncMessageResp{}
	mi := &file_chat_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSyncMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncMessageResp) ProtoMessage() {}

func (x *GetSyncMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncMessageResp.ProtoReflect.Descriptor instead.
func (*GetSyncMessageResp) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{12}
}

func (x *GetSyncMessageResp) GetMsg() []*MessageWithSeq {
	if x != nil {
		return x.Msg
	}
	return nil
}

type GetHistoryMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId int64 `protobuf:"varint,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	UserA   int64 `protobuf:"varint,2,opt,name=userA,proto3" json:"userA,omitempty"`
	UserB   int64 `protobuf:"varint,3,opt,name=userB,proto3" json:"userB,omitempty"`
	Nums    int64 `protobuf:"varint,4,opt,name=nums,proto3" json:"nums,omitempty"`
	Offset  int64 `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetHistoryMessageReq) Reset() {
	*x = GetHistoryMessageReq{}
	mi := &file_chat_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHistoryMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryMessageReq) ProtoMessage() {}

func (x *GetHistoryMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryMessageReq.ProtoReflect.Descriptor instead.
func (*GetHistoryMessageReq) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{13}
}

func (x *GetHistoryMessageReq) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GetHistoryMessageReq) GetUserA() int64 {
	if x != nil {
		return x.UserA
	}
	return 0
}

func (x *GetHistoryMessageReq) GetUserB() int64 {
	if x != nil {
		return x.UserB
	}
	return 0
}

func (x *GetHistoryMessageReq) GetNums() int64 {
	if x != nil {
		return x.Nums
	}
	return 0
}

func (x *GetHistoryMessageReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetHistoryMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg           []*MessageWithSeq `protobuf:"bytes,1,rep,name=msg,proto3" json:"msg,omitempty"`
	NextReadIndex int64             `protobuf:"varint,2,opt,name=nextReadIndex,proto3" json:"nextReadIndex,omitempty"`
}

func (x *GetHistoryMessageResp) Reset() {
	*x = GetHistoryMessageResp{}
	mi := &file_chat_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHistoryMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryMessageResp) ProtoMessage() {}

func (x *GetHistoryMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryMessageResp.ProtoReflect.Descriptor instead.
func (*GetHistoryMessageResp) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{14}
}

func (x *GetHistoryMessageResp) GetMsg() []*MessageWithSeq {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *GetHistoryMessageResp) GetNextReadIndex() int64 {
	if x != nil {
		return x.NextReadIndex
	}
	return 0
}

type SearchHistoryMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId int64  `protobuf:"varint,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	UserA   int64  `protobuf:"varint,2,opt,name=userA,proto3" json:"userA,omitempty"`
	UserB   int64  `protobuf:"varint,3,opt,name=userB,proto3" json:"userB,omitempty"`
	Limit   int64  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset  int64  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	KeyWord string `protobuf:"bytes,6,opt,name=keyWord,proto3" json:"keyWord,omitempty"`
}

func (x *SearchHistoryMessageReq) Reset() {
	*x = SearchHistoryMessageReq{}
	mi := &file_chat_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchHistoryMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchHistoryMessageReq) ProtoMessage() {}

func (x *SearchHistoryMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchHistoryMessageReq.ProtoReflect.Descriptor instead.
func (*SearchHistoryMessageReq) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{15}
}

func (x *SearchHistoryMessageReq) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *SearchHistoryMessageReq) GetUserA() int64 {
	if x != nil {
		return x.UserA
	}
	return 0
}

func (x *SearchHistoryMessageReq) GetUserB() int64 {
	if x != nil {
		return x.UserB
	}
	return 0
}

func (x *SearchHistoryMessageReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchHistoryMessageReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SearchHistoryMessageReq) GetKeyWord() string {
	if x != nil {
		return x.KeyWord
	}
	return ""
}

type SearchHistoryMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg []*MessageWithSeq `protobuf:"bytes,1,rep,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SearchHistoryMessageResp) Reset() {
	*x = SearchHistoryMessageResp{}
	mi := &file_chat_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchHistoryMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchHistoryMessageResp) ProtoMessage() {}

func (x *SearchHistoryMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchHistoryMessageResp.ProtoReflect.Descriptor instead.
func (*SearchHistoryMessageResp) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{16}
}

func (x *SearchHistoryMessageResp) GetMsg() []*MessageWithSeq {
	if x != nil {
		return x.Msg
	}
	return nil
}

var File_chat_proto protoreflect.FileDescriptor

var file_chat_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62,
	0x22, 0xb5, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xd8, 0x01, 0x0a, 0x0e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x57, 0x69, 0x74, 0x68, 0x53, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63,
	0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x22, 0xf2, 0x01, 0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69,
	0x6e, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65,
	0x4c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x73, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xe5, 0x01, 0x0a, 0x0d, 0x53, 0x79, 0x6e,
	0x63, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x69,
	0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x22, 0x06, 0x0a, 0x04, 0x4e, 0x75, 0x6c, 0x6c, 0x22, 0x37, 0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x22, 0x52, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x4c,
	0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x0e, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x64, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x51, 0x0a, 0x0f,
	0x53, 0x79, 0x6e, 0x63, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22,
	0x28, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x54, 0x0a, 0x08, 0x53, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73,
	0x79, 0x6e, 0x63, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x22,
	0x47, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53,
	0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x57, 0x69, 0x74, 0x68, 0x53, 0x65, 0x71, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0x88, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x41,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x41, 0x12, 0x14, 0x0a,
	0x05, 0x75, 0x73, 0x65, 0x72, 0x42, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x75, 0x73,
	0x65, 0x72, 0x42, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x75, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x6e, 0x75, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22,
	0x63, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x57, 0x69, 0x74, 0x68, 0x53, 0x65, 0x71, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x24,
	0x0a, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x61, 0x64, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0xa7, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73,
	0x65, 0x72, 0x41, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x41,
	0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x42, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x75, 0x73, 0x65, 0x72, 0x42, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x57, 0x6f, 0x72, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x57, 0x6f, 0x72, 0x64, 0x22, 0x40,
	0x0a, 0x18, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x57, 0x69, 0x74, 0x68, 0x53, 0x65, 0x71, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x32, 0x82, 0x03, 0x0a, 0x0c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x39, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x64, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b,
	0x53, 0x79, 0x6e, 0x63, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a,
	0x13, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x04, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x0b, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x51, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x4d, 0x45, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chat_proto_rawDescOnce sync.Once
	file_chat_proto_rawDescData = file_chat_proto_rawDesc
)

func file_chat_proto_rawDescGZIP() []byte {
	file_chat_proto_rawDescOnce.Do(func() {
		file_chat_proto_rawDescData = protoimpl.X.CompressGZIP(file_chat_proto_rawDescData)
	})
	return file_chat_proto_rawDescData
}

var file_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_chat_proto_goTypes = []any{
	(*Message)(nil),                  // 0: pb.Message
	(*MessageWithSeq)(nil),           // 1: pb.MessageWithSeq
	(*StoreTableItem)(nil),           // 2: pb.StoreTableItem
	(*SyncTableItem)(nil),            // 3: pb.SyncTableItem
	(*Null)(nil),                     // 4: pb.Null
	(*StoreAddItemReq)(nil),          // 5: pb.StoreAddItemReq
	(*StoreAddItemResp)(nil),         // 6: pb.StoreAddItemResp
	(*SyncAddItemReq)(nil),           // 7: pb.SyncAddItemReq
	(*SyncAddItemResp)(nil),          // 8: pb.SyncAddItemResp
	(*SendReq)(nil),                  // 9: pb.SendReq
	(*SendResp)(nil),                 // 10: pb.SendResp
	(*GetSyncMessageReq)(nil),        // 11: pb.GetSyncMessageReq
	(*GetSyncMessageResp)(nil),       // 12: pb.GetSyncMessageResp
	(*GetHistoryMessageReq)(nil),     // 13: pb.GetHistoryMessageReq
	(*GetHistoryMessageResp)(nil),    // 14: pb.GetHistoryMessageResp
	(*SearchHistoryMessageReq)(nil),  // 15: pb.SearchHistoryMessageReq
	(*SearchHistoryMessageResp)(nil), // 16: pb.SearchHistoryMessageResp
}
var file_chat_proto_depIdxs = []int32{
	2,  // 0: pb.StoreAddItemReq.msg:type_name -> pb.StoreTableItem
	3,  // 1: pb.SyncAddItemReq.msg:type_name -> pb.SyncTableItem
	0,  // 2: pb.SendReq.msg:type_name -> pb.Message
	1,  // 3: pb.GetSyncMessageResp.msg:type_name -> pb.MessageWithSeq
	1,  // 4: pb.GetHistoryMessageResp.msg:type_name -> pb.MessageWithSeq
	1,  // 5: pb.SearchHistoryMessageResp.msg:type_name -> pb.MessageWithSeq
	5,  // 6: pb.TableService.StoreAddItem:input_type -> pb.StoreAddItemReq
	7,  // 7: pb.TableService.SyncAddItem:input_type -> pb.SyncAddItemReq
	9,  // 8: pb.TableService.Send:input_type -> pb.SendReq
	11, // 9: pb.TableService.GetSyncMessage:input_type -> pb.GetSyncMessageReq
	13, // 10: pb.TableService.GetHistoryMessage:input_type -> pb.GetHistoryMessageReq
	15, // 11: pb.TableService.SearchHistoryMEssage:input_type -> pb.SearchHistoryMessageReq
	6,  // 12: pb.TableService.StoreAddItem:output_type -> pb.StoreAddItemResp
	8,  // 13: pb.TableService.SyncAddItem:output_type -> pb.SyncAddItemResp
	10, // 14: pb.TableService.Send:output_type -> pb.SendResp
	12, // 15: pb.TableService.GetSyncMessage:output_type -> pb.GetSyncMessageResp
	14, // 16: pb.TableService.GetHistoryMessage:output_type -> pb.GetHistoryMessageResp
	16, // 17: pb.TableService.SearchHistoryMEssage:output_type -> pb.SearchHistoryMessageResp
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_chat_proto_init() }
func file_chat_proto_init() {
	if File_chat_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chat_proto_goTypes,
		DependencyIndexes: file_chat_proto_depIdxs,
		MessageInfos:      file_chat_proto_msgTypes,
	}.Build()
	File_chat_proto = out.File
	file_chat_proto_rawDesc = nil
	file_chat_proto_goTypes = nil
	file_chat_proto_depIdxs = nil
}
