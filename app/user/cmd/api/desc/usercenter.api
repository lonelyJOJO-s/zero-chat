syntax = "v1"

info (
	titie:   "user service"
	desc:    "service of user/group/casbin/tweets"
	author:  "joey.zhu"
	email:   "1207833477@qq.com"
	version: "v1"
)

import (
	"user/user.api"
	"group/group.api"
)

type (
	GetMembersReq {
		Id int64 `query:"id"`
	}
	GetMembersResp {
		Users []UserBasic `json:"users"`
	}
)

// user 注册和登录
@server (
	prefix:  usercenter/api/v1
	group:   user
	timeout: 3s
)
service user {
	@doc "register"
	@handler register
	post /user/register (RegisterReq) returns (RegisterResp)

	@doc "login_with_username"
	@handler loginWithUsername
	post /user/login/username (UsernameLoginReq) returns (LoginResp)

	@doc "login_with_email"
	@handler logWithEmail
	post /user/login/email (EmailLoginReq) returns (LoginResp)

	@doc "summary: send email"
	@handler SendEmail
	post /user/email/send (EmailSendReq) returns (Null)
}

// user curd
@server (
	prefix:  usercenter/api/v1
	group:   user
	jwt:     Auth
	timeout: 3s
)
service user {
	@doc "user information"
	@handler Detail
	get /user/detail/:id (UserInfoReq) returns (UserInfoResp)

	@doc "delete user"
	@handler Delete
	get /user/delete (Null) returns (Null)

	@doc "update user"
	@handler Update
	post /user/update (UserUpdateReq) returns (UserUpdateResp)

	@doc "user login out"
	@handler loginOut
	post /user/loginOut (Null) returns (Null)

	@doc "post user avatar"
	@handler Avatar
	post /user/avatar (Null) returns (string)

	@doc "get all users"
	@handler GetAll
	get /users (Null) returns (GetAllResp)

	@doc "search users who are not friends yet"
	@handler SearchUsers
	get /user/search (SearchUsersReq) returns (SearchUsersResp)
}

@server (
	prefix:  usercenter/api/v1
	group:   friend
	jwt:     Auth
	timeout: 3s
)
service user {
	@doc "friend list"
	@handler FriendList
	get /user/friends (Null) returns (FriendsResp)

	@doc "delete friend"
	@handler FriendDel
	delete /user/friend/:id (FriendIdReq) returns (Null)

	@doc "delete friend"
	@handler FriendAdd
	post /user/friend/:id (FriendIdReq) returns (Null)

	@handler Search
	get /user/friend/search (FriendSearchReq) returns (FriendSearchResp)
}

@server (
	prefix:  usercenter/api/v1
	group:   group
	jwt:     Auth
	timeout: 3s
)
service user {
	@doc "create a group"
	@handler CreateGroup
	post /group/create (GroupCreateReq) returns (GroupResp)

	@doc "join a group"
	@handler JoinGroup
	post /group/join/:id (JoinGroupReq) returns (GroupResp)

	@doc "update a group"
	@handler UpdateGroup
	post /group/update (GroupUpdateReq) returns (Null)

	@doc "get group info"
	@handler GroupInfo
	get /group/:id (GroupId) returns (GroupResp)

	@doc "quit a group"
	@handler QuitGroup
	post /group/quit (GroupQuitReq) returns (Null)

	@doc "dismiss a group"
	@handler DismissGroup
	delete /group/:id (GroupId) returns (Null)

	@doc "get groups belong to user"
	@handler GetAllGroups
	get /groups (Null) returns (GetAllGroupsResp)

	@doc "search group belong to user"
	@handler SearchJoinedGroup
	get /group/search-joined (SearchJoinedGroupReq) returns (SearchJoinedGroupResp)

	@doc "search all group"
	@handler SearchAllGroup
	get /group/search-all (SearchAllGroupReq) returns (SearchAllGroupResp)

	@doc "get group members"
	@handler GetMembers
	get /group/members (GetMembersReq) returns (GetMembersResp)
}