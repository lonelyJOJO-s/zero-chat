syntax = "v1"

info (
	title:   "user entity"
	desc:    "user entity"
	author:  "joey.zhu"
	email:   "1207833477@qq.com"
	version: "v1"
)

type(
    Null {}
    IdReq {
        id int64 `json:"id"`
    }
)  

type User {
	Id       int64  `json:"id"`
	Phone    string `json:"phone"`
	Username string `json:"username"`
	Sex      int64  `json:"sex"`
	Avatar   string `json:"avatar"`
	Status   string `json:"status"`
	Desc     string `json:"desc"`
    Email string  `json:"email"`
}

type (
	RegisterReq {
		Phone    string `json:"phone"`
		Email    string `json:"email"`
		Username string `json:"username"`
		Password string `json:"password"`
		Sex      int8   `json:"sex"`
	}
	RegisterResp {
		AccessToken  string `json:"accessToken"`
		AccessExpire int64  `json:"accessExpire"`
		RefreshAfter int64  `json:"refreshAfter"`
	}
)

type (
	PhoneLoginReq {
		Phone    string `json:"Phone"`
		Password string `json:"password"`
	}
	EmailLoginReq {
		email   string `json:"email"`
		Captcha string `json:"captcha"`
	}
	LoginResp {
		AccessToken  string `json:"accessToken"`
		AccessExpire int64  `json:"accessExpire"`
		RefreshAfter int64  `json:"refreshAfter"`
	}
)

type (
	UserInfoReq {
		id int64 `json:"id"`
	}
	UserInfoResp {
		UserInfo User `json:"user_info"`
	}
    UserUpdateReq {
        UserUpdate User `json:"user_update"`
    }
    UserUpdateResp {
        UserUpdate User `json:"user_update"`
    }
)

type (
    FriendsResp {
        Users []User  `json:"users"`
    }
    FriendSearchReq{
        Phone string `json:"phone"`
        Username string `json:"username"`
    }
    FriendSearchResp{
        users []User `json:"users"`
    }
	FriendIdReq {
		id int64 `path:"id"`
	}
)
