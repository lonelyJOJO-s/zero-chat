// Code generated by goctl. DO NOT EDIT.
// Source: usercenter.proto

package groupservice

import (
	"context"

	"zero-chat/app/user/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddFriendsReq          = pb.AddFriendsReq
	AddFriendsResp         = pb.AddFriendsResp
	CreateGroupReq         = pb.CreateGroupReq
	CreateGroupResp        = pb.CreateGroupResp
	DelFriendsReq          = pb.DelFriendsReq
	DelFriendsResp         = pb.DelFriendsResp
	DelUserInfoReq         = pb.DelUserInfoReq
	DelUserInfoResp        = pb.DelUserInfoResp
	DismissGroupReq        = pb.DismissGroupReq
	DismissGroupResp       = pb.DismissGroupResp
	GenerateTokenReq       = pb.GenerateTokenReq
	GenerateTokenResp      = pb.GenerateTokenResp
	GetAllUsersReq         = pb.GetAllUsersReq
	GetAllUsersResp        = pb.GetAllUsersResp
	GetCaptchaReq          = pb.GetCaptchaReq
	GetCaptchaResp         = pb.GetCaptchaResp
	GetFriendsReq          = pb.GetFriendsReq
	GetFriendsResp         = pb.GetFriendsResp
	GetGroupInfoReq        = pb.GetGroupInfoReq
	GetGroupInfoResp       = pb.GetGroupInfoResp
	GetJoinedGroupIdsReq   = pb.GetJoinedGroupIdsReq
	GetJoinedGroupIdsResp  = pb.GetJoinedGroupIdsResp
	GetJoinedGroupsReq     = pb.GetJoinedGroupsReq
	GetJoinedGroupsResp    = pb.GetJoinedGroupsResp
	GetManagedGroupIdsReq  = pb.GetManagedGroupIdsReq
	GetManagedGroupIdsResp = pb.GetManagedGroupIdsResp
	GetMemberIdsReq        = pb.GetMemberIdsReq
	GetMemberIdsResp       = pb.GetMemberIdsResp
	GetUserInfoReq         = pb.GetUserInfoReq
	GetUserInfoResp        = pb.GetUserInfoResp
	GetUuidReq             = pb.GetUuidReq
	GetUuidResp            = pb.GetUuidResp
	Group                  = pb.Group
	JoinGroupReq           = pb.JoinGroupReq
	JoinGroupResp          = pb.JoinGroupResp
	LoginReq               = pb.LoginReq
	LoginResp              = pb.LoginResp
	QuitGroupReq           = pb.QuitGroupReq
	QuitGroupResp          = pb.QuitGroupResp
	RegisterReq            = pb.RegisterReq
	RegisterResp           = pb.RegisterResp
	SearchFriendFuzzyReq   = pb.SearchFriendFuzzyReq
	SearchFriendFuzzyResp  = pb.SearchFriendFuzzyResp
	SearchGroupReq         = pb.SearchGroupReq
	SearchGroupResp        = pb.SearchGroupResp
	SearchUserFuzzyReq     = pb.SearchUserFuzzyReq
	SearchUserFuzzyResp    = pb.SearchUserFuzzyResp
	UpdateGroupReq         = pb.UpdateGroupReq
	UpdateGroupResp        = pb.UpdateGroupResp
	UpdateUserInfoReq      = pb.UpdateUserInfoReq
	UpdateUserInfoResp     = pb.UpdateUserInfoResp
	User                   = pb.User
	UserWithPwd            = pb.UserWithPwd

	GroupService interface {
		// group
		CreateGroup(ctx context.Context, in *CreateGroupReq, opts ...grpc.CallOption) (*CreateGroupResp, error)
		JoinGroup(ctx context.Context, in *JoinGroupReq, opts ...grpc.CallOption) (*JoinGroupResp, error)
		QuitGroup(ctx context.Context, in *QuitGroupReq, opts ...grpc.CallOption) (*QuitGroupResp, error)
		DismissGroup(ctx context.Context, in *DismissGroupReq, opts ...grpc.CallOption) (*DismissGroupResp, error)
		UpdateGroupInfo(ctx context.Context, in *UpdateGroupReq, opts ...grpc.CallOption) (*UpdateGroupResp, error)
		GetGroupInfo(ctx context.Context, in *GetGroupInfoReq, opts ...grpc.CallOption) (*GetGroupInfoResp, error)
		SearchGroup(ctx context.Context, in *SearchGroupReq, opts ...grpc.CallOption) (*SearchGroupResp, error)
		GetMemberIds(ctx context.Context, in *GetMemberIdsReq, opts ...grpc.CallOption) (*GetMemberIdsResp, error)
		GetManagedGroupIds(ctx context.Context, in *GetManagedGroupIdsReq, opts ...grpc.CallOption) (*GetManagedGroupIdsResp, error)
		GetJoinedGroupIds(ctx context.Context, in *GetJoinedGroupIdsReq, opts ...grpc.CallOption) (*GetJoinedGroupIdsResp, error)
		GetJoinedGroups(ctx context.Context, in *GetJoinedGroupsReq, opts ...grpc.CallOption) (*GetJoinedGroupsResp, error)
	}

	defaultGroupService struct {
		cli zrpc.Client
	}
)

func NewGroupService(cli zrpc.Client) GroupService {
	return &defaultGroupService{
		cli: cli,
	}
}

// group
func (m *defaultGroupService) CreateGroup(ctx context.Context, in *CreateGroupReq, opts ...grpc.CallOption) (*CreateGroupResp, error) {
	client := pb.NewGroupServiceClient(m.cli.Conn())
	return client.CreateGroup(ctx, in, opts...)
}

func (m *defaultGroupService) JoinGroup(ctx context.Context, in *JoinGroupReq, opts ...grpc.CallOption) (*JoinGroupResp, error) {
	client := pb.NewGroupServiceClient(m.cli.Conn())
	return client.JoinGroup(ctx, in, opts...)
}

func (m *defaultGroupService) QuitGroup(ctx context.Context, in *QuitGroupReq, opts ...grpc.CallOption) (*QuitGroupResp, error) {
	client := pb.NewGroupServiceClient(m.cli.Conn())
	return client.QuitGroup(ctx, in, opts...)
}

func (m *defaultGroupService) DismissGroup(ctx context.Context, in *DismissGroupReq, opts ...grpc.CallOption) (*DismissGroupResp, error) {
	client := pb.NewGroupServiceClient(m.cli.Conn())
	return client.DismissGroup(ctx, in, opts...)
}

func (m *defaultGroupService) UpdateGroupInfo(ctx context.Context, in *UpdateGroupReq, opts ...grpc.CallOption) (*UpdateGroupResp, error) {
	client := pb.NewGroupServiceClient(m.cli.Conn())
	return client.UpdateGroupInfo(ctx, in, opts...)
}

func (m *defaultGroupService) GetGroupInfo(ctx context.Context, in *GetGroupInfoReq, opts ...grpc.CallOption) (*GetGroupInfoResp, error) {
	client := pb.NewGroupServiceClient(m.cli.Conn())
	return client.GetGroupInfo(ctx, in, opts...)
}

func (m *defaultGroupService) SearchGroup(ctx context.Context, in *SearchGroupReq, opts ...grpc.CallOption) (*SearchGroupResp, error) {
	client := pb.NewGroupServiceClient(m.cli.Conn())
	return client.SearchGroup(ctx, in, opts...)
}

func (m *defaultGroupService) GetMemberIds(ctx context.Context, in *GetMemberIdsReq, opts ...grpc.CallOption) (*GetMemberIdsResp, error) {
	client := pb.NewGroupServiceClient(m.cli.Conn())
	return client.GetMemberIds(ctx, in, opts...)
}

func (m *defaultGroupService) GetManagedGroupIds(ctx context.Context, in *GetManagedGroupIdsReq, opts ...grpc.CallOption) (*GetManagedGroupIdsResp, error) {
	client := pb.NewGroupServiceClient(m.cli.Conn())
	return client.GetManagedGroupIds(ctx, in, opts...)
}

func (m *defaultGroupService) GetJoinedGroupIds(ctx context.Context, in *GetJoinedGroupIdsReq, opts ...grpc.CallOption) (*GetJoinedGroupIdsResp, error) {
	client := pb.NewGroupServiceClient(m.cli.Conn())
	return client.GetJoinedGroupIds(ctx, in, opts...)
}

func (m *defaultGroupService) GetJoinedGroups(ctx context.Context, in *GetJoinedGroupsReq, opts ...grpc.CallOption) (*GetJoinedGroupsResp, error) {
	client := pb.NewGroupServiceClient(m.cli.Conn())
	return client.GetJoinedGroups(ctx, in, opts...)
}
