// Code generated by goctl. DO NOT EDIT.
// Source: usercenter.proto

package server

import (
	"context"

	"zero-chat/app/user/cmd/rpc/internal/logic/friendservice"
	"zero-chat/app/user/cmd/rpc/internal/svc"
	"zero-chat/app/user/cmd/rpc/pb"
)

type FriendServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedFriendServiceServer
}

func NewFriendServiceServer(svcCtx *svc.ServiceContext) *FriendServiceServer {
	return &FriendServiceServer{
		svcCtx: svcCtx,
	}
}

// friend basic
func (s *FriendServiceServer) GetFriends(ctx context.Context, in *pb.GetFriendsReq) (*pb.GetFriendsResp, error) {
	l := friendservicelogic.NewGetFriendsLogic(ctx, s.svcCtx)
	return l.GetFriends(in)
}

func (s *FriendServiceServer) AddFriends(ctx context.Context, in *pb.AddFriendsReq) (*pb.AddFriendsResp, error) {
	l := friendservicelogic.NewAddFriendsLogic(ctx, s.svcCtx)
	return l.AddFriends(in)
}

func (s *FriendServiceServer) DelFrineds(ctx context.Context, in *pb.DelFriendsReq) (*pb.DelFriendsResp, error) {
	l := friendservicelogic.NewDelFrinedsLogic(ctx, s.svcCtx)
	return l.DelFrineds(in)
}

func (s *FriendServiceServer) SearchFriendFuzzy(ctx context.Context, in *pb.SearchFriendFuzzyReq) (*pb.SearchFriendFuzzyResp, error) {
	l := friendservicelogic.NewSearchFriendFuzzyLogic(ctx, s.svcCtx)
	return l.SearchFriendFuzzy(in)
}
