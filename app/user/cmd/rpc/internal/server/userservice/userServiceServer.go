// Code generated by goctl. DO NOT EDIT.
// Source: usercenter.proto

package server

import (
	"context"

	"zero-chat/app/user/cmd/rpc/internal/logic/userservice"
	"zero-chat/app/user/cmd/rpc/internal/svc"
	"zero-chat/app/user/cmd/rpc/pb"
)

type UserServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedUserServiceServer
}

func NewUserServiceServer(svcCtx *svc.ServiceContext) *UserServiceServer {
	return &UserServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServiceServer) Login(ctx context.Context, in *pb.LoginReq) (*pb.LoginResp, error) {
	l := userservicelogic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UserServiceServer) Register(ctx context.Context, in *pb.RegisterReq) (*pb.RegisterResp, error) {
	l := userservicelogic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *UserServiceServer) GenerateToken(ctx context.Context, in *pb.GenerateTokenReq) (*pb.GenerateTokenResp, error) {
	l := userservicelogic.NewGenerateTokenLogic(ctx, s.svcCtx)
	return l.GenerateToken(in)
}

// user basic
func (s *UserServiceServer) GetUsersInfo(ctx context.Context, in *pb.GetUsersInfoReq) (*pb.GetUsersInfoResp, error) {
	l := userservicelogic.NewGetUsersInfoLogic(ctx, s.svcCtx)
	return l.GetUsersInfo(in)
}

func (s *UserServiceServer) SoftDelUser(ctx context.Context, in *pb.DelUserInfoReq) (*pb.DelUserInfoResp, error) {
	l := userservicelogic.NewSoftDelUserLogic(ctx, s.svcCtx)
	return l.SoftDelUser(in)
}

func (s *UserServiceServer) UpdateUserInfo(ctx context.Context, in *pb.UpdateUserInfoReq) (*pb.UpdateUserInfoResp, error) {
	l := userservicelogic.NewUpdateUserInfoLogic(ctx, s.svcCtx)
	return l.UpdateUserInfo(in)
}

func (s *UserServiceServer) SearchUserFuzzy(ctx context.Context, in *pb.SearchUserFuzzyReq) (*pb.SearchUserFuzzyResp, error) {
	l := userservicelogic.NewSearchUserFuzzyLogic(ctx, s.svcCtx)
	return l.SearchUserFuzzy(in)
}

func (s *UserServiceServer) GetCaptcha(ctx context.Context, in *pb.GetCaptchaReq) (*pb.GetCaptchaResp, error) {
	l := userservicelogic.NewGetCaptchaLogic(ctx, s.svcCtx)
	return l.GetCaptcha(in)
}

func (s *UserServiceServer) GetAllUsers(ctx context.Context, in *pb.GetAllUsersReq) (*pb.GetAllUsersResp, error) {
	l := userservicelogic.NewGetAllUsersLogic(ctx, s.svcCtx)
	return l.GetAllUsers(in)
}
